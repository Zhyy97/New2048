{"version":3,"sources":["game.js"],"names":["ROWS","NUMBERS","MIN_LENGTH","MOVE_DURATION","cc","Class","extends","Component","properties","scoreLabel","Label","score","blockPrefab","Prefab","gap","bg","Node","overPanel","start","drawBgBlocks","init","addEventHandler","blockSize","winSize","width","x","y","positions","i","push","j","block","instantiate","height","addChild","setPosition","v2","getComponent","setNumber","updateScore","blocks","length","destroy","data","addBlock","number","string","getEmptyLocations","locations","index","Math","floor","random","position","on","event","startPoint","getLocation","touchEnd","systemEvent","SystemEvent","EventType","KEY_UP","keyUp","keyCode","macro","KEY","a","moveLeft","d","w","moveDown","s","endPoint","vec","sub","mag","abs","afterMove","doMove","callback","action","moveTo","finish","callFunc","runAction","sequence","move","toMove","counter","moveRight","moveUp"],"mappings":"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","file":"game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts(脚本)","sourcesContent":["const ROWS = 4;//在外设定行高数量，之后需要修改就在ROWS后修改行高数就可以，里面的行高数定义为ROWS\r\nconst NUMBERS = [2,4];//随机生成2或者4的值的数字块并且插入游戏里【在这里设置，之后下面修改容易】\r\nconst MIN_LENGTH = 50;//最起码拖动格子的长度\r\nconst MOVE_DURATION = 0.1;//格子的移动设定时间\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        scoreLabel:cc.Label,\r\n        score:0,//得分\r\n        blockPrefab:cc.Prefab,\r\n        gap:20,//间隔\r\n        bg:cc.Node,\r\n        overPanel:cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.drawBgBlocks();\r\n        this.init();//初始化【分数归零，清空所有块】\r\n        this.addEventHandler();//事件监听：在游戏中拖动块时能够辨别方向\r\n\r\n    },\r\n\r\n    drawBgBlocks () {\r\n        this.blockSize= (cc.winSize.width - this.gap * (ROWS+1)) / ROWS;//第一个小格子\r\n        let x = this.gap + this.blockSize / 2;//X轴的坐标\r\n        let y = this.blockSize + this.blockSize / 2;//Y轴的大概坐标\r\n        \r\n        //声明一个数组，把每个格子的位置的储存记起来，之后需要插入/移动到哪个格子的前后左右就不用再去计算一次\r\n        this.positions=[];        \r\n        //绘制剩下的格子，把4x4格子的属性写进去一个for循环里面,生成4x4的小格子\r\n        for (let i = 0; i < ROWS; ++i){\r\n            this.positions.push([0,0,0,0]);//声明数组的值\r\n            for(let j = 0; j < ROWS; ++j){\r\n                let block=cc.instantiate(this.blockPrefab);//画出第一个小格子\r\n                block.width=this.blockSize;\r\n                block.height=this.blockSize;//修改小格子的大小\r\n                this.positions[i][j] = block;\r\n                this.bg.addChild(block);//添加小格子\r\n                block.setPosition(cc.v2(x,y));//确定小格子的位置，这是第一个小格子确定的位置\r\n                this.positions[i][j]=cc.v2(x,y);//记下小格子的位置坐标\r\n                x +=this.gap + this.blockSize;//N个新的小格子新生成的x轴的位置【即一个gap空隙＋一个小格子=新的小格子】\r\n                //敲好block.js的代码之后，回来game.js[即此处↓]设置block\r\n                block.getComponent('block').setNumber(0);//获得block.js里面设置的属性，并且定初始数字为0        \r\n            }\r\n            y += this.gap + this.blockSize;//N个新的小格子新生成的y轴的位置【即一个gap空隙＋一个小格子=新的小格子】\r\n\r\n            //画完x轴的小格子后画y轴的，要回到原始的左下角开始往上画，所以定义X回到原始位置\r\n            x =this.gap + this.blockSize / 2;\r\n        }\r\n    \r\n    },\r\n\r\n    //初始化\r\n    init(){\r\n        // this.overPanel.active=false;\r\n        this.updateScore(0);\r\n\r\n        //把现有的块清掉，即游戏后有颜色的块变为初始化\r\n        //首先先判断是否为空值\r\n        if(this.blocks){\r\n            for (let i=0; i<this.blocks.length; ++i){\r\n                for (let j=0; j<this.blocks[i].length; ++j){\r\n                    if (this.blocks[i][j] !=null){\r\n                        this.blocks[i][j].destroy();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.data=[];//data内储存每个block里面的数字，没有挂钩节点，直接清掉\r\n        this.blocks=[];//新建数组\r\n        //初始化data和blocks\r\n        for (let i=0; i<ROWS; ++i){\r\n            this.blocks.push([null,null,null,null]);\r\n            this.data.push([0,0,0,0]);\r\n        }\r\n\r\n        //开始时新添加三个块\r\n        this.addBlock();\r\n        this.addBlock();\r\n        this.addBlock();\r\n    },\r\n\r\n    //分数清零初始化，更新分数\r\n    updateScore(number){\r\n        this.score = number;\r\n        this.scoreLabel.string = 'SCORE:' + number;\r\n    },\r\n\r\n    //在游戏时，添加的块需要先找出空的位置插入【排查空隙】\r\n    getEmptyLocations(){\r\n        let locations = [];//新建一个空的数组，如果已经满格，就排查出一个空的位置\r\n        for(let i=0; i<this.blocks.length; ++i){\r\n            for(let j=0; j<this.blocks[i].length; ++j){\r\n                if(this.blocks[i][j] == null){\r\n                    // locations.push(i * ROWS + j);\r\n                    locations.push({x: i,y: j});\r\n                }\r\n            }\r\n        }\r\n\r\n        return locations;\r\n    },\r\n\r\n    //在情况的时候，制定开始时就有三个块\r\n    addBlock(){\r\n        let locations=this.getEmptyLocations();\r\n\r\n        //如果生成的格子是空值，就不要执行项目的代码，在获取代码之前return做一个排空的设置\r\n        if (locations.length == 0) { return false };\r\n        \r\n        //随机抽出一个空闲的位置\r\n        let index = locations[Math.floor(Math.random() * locations.length)];\r\n        let x=index.x;//当前x的位置\r\n        let y=index.y;\r\n\r\n        let position=this.positions[x][y];//把上面定义好的positions取出来等于当前的想，y的位置\r\n\r\n        let block=cc.instantiate(this.blockPrefab);//画出第一个小格子\r\n        block.width=this.blockSize;\r\n        block.height=this.blockSize;//修改小格子的大小\r\n        this.bg.addChild(block);//添加小格子\r\n        block.setPosition(position);//确定小格子的位置，这是第一个小格子确定的位置\r\n        //敲好block.js的代码之后，回来game.js[即此处↓]设置block\r\n        let number = NUMBERS[Math.floor(Math.random() * NUMBERS.length)];\r\n        block.getComponent('block').setNumber(number);\r\n        this.blocks[x][y] = block;\r\n        this.data[x][y] = number;//119-122行:用block存储格子，放了格子的位置要记在data里面存储\r\n        return true;\r\n    },\r\n\r\n    //处理事件监听：在游戏中拖动块时能够辨别方向。对Cocos上的bg以下的内容进行监听\r\n    addEventHandler(){\r\n         //滑动操作\r\n        this.bg.on('touchstart', (event)=>{//对bg进行事件监听，(event)=>表示箭头函数\r\n            this.startPoint = event.getLocation();//把起始的节点取出来\r\n        });\r\n\r\n        this.bg.on('touchend', (event)=>{\r\n            this.touchEnd(event);\r\n        });\r\n\r\n        this.bg.on('touchcancel', (event)=>{\r\n            this.touchEnd(event);\r\n        });\r\n\r\n         //键盘\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.keyUp, this);\r\n\r\n    },\r\n\r\n    keyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.moveLeft(true);\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.moveLeft(false);\r\n                break;\r\n            case cc.macro.KEY.w:\r\n                this.moveDown(false);\r\n                break;\r\n            case cc.macro.KEY.s:\r\n                this.moveDown(true);\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    touchEnd(event){\r\n        this.endPoint = event.getLocation();//获取结束的节点\r\n\r\n        let vec = this.endPoint.sub(this.startPoint);//计算向量\r\n\r\n        //设置长度。即知点击块时不会产生方向的拖动，只有拖动大于设定的长度范围时，只产生方向\r\n        if (vec.mag() > MIN_LENGTH) {\r\n            //判断方向。拖动了一定长度之后，就响应水平还是垂直方向。水平还是垂直方向的左右方向再通过设定所得\r\n            if (Math.abs(vec.x) > Math.abs(vec.y)) {\r\n                //水平方向\r\n                if (vec.x > 0) {\r\n                    this.moveLeft(false);\r\n                }else {\r\n                    this.moveLeft(true);\r\n                }\r\n            }else{\r\n                //垂直方向\r\n                if (vec.y > 0) {\r\n                    this.moveDown(false);\r\n                }else {\r\n                    this.moveDown(true);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    afterMove(){\r\n\r\n    },\r\n\r\n    /**\r\n    * 移动格子。\r\n    * @param {cc.Node} block \r\n    * @param {cc.p} position \r\n    * @param {function} callback \r\n    */\r\n    doMove(block, position, callback){\r\n        let action = cc.moveTo(MOVE_DURATION, position);\r\n        let finish = cc.callFunc(() =>{\r\n            // callback && callback()\r\n            callback();\r\n        });\r\n        block.runAction(cc.sequence(action, finish));//doMove按顺序执行action和finish，finish完成无误之后才回调\r\n    },\r\n\r\n    moveLeft(){\r\n        let move = (x, y, callback) =>{//完成之后使命结束，上报命令回调\r\n            if (y == 0 || this.data[x][y] == 0){//何时到顶然后结束\r\n                callback && callback();//表示移动完毕后回调上报\r\n                return;\r\n            }else if (this.data[x] [y-1] == 0){\r\n                //移动\r\n                //取当前块\r\n                let block = this.blocks[x][y];\r\n                let position = this.positions[x][y-1];\r\n                //移动即让let block移动到let position上面,然后把之前的block的位置复原或者为空\r\n                this.blocks[x][y-1] = block;\r\n                this.data[x][y-1] = this.data[x][y];\r\n                //当前位置置空\r\n                this.data[x][y] = 0;\r\n                this.blocks[x][y] = null;\r\n                 //移动动画\r\n                this.doMove(block, position, ()=>{\r\n                    move(x, y-1, callback);\r\n                })\r\n            }else if (this.data[x] [y-1] == this.data[x][y]){//合并\r\n\r\n            }else{\r\n                callback && callback();\r\n                return;\r\n            }\r\n        };\r\n        let toMove = [];\r\n        for (let i=0; i<ROWS; ++i){\r\n            for (let j=0; j<ROWS; ++j){\r\n                if (this.data[i][j] != 0) {//移动时，判断前面是否有空位/相同的数字格子；是否已经满格\r\n                    toMove.push({x: i,y: j});\r\n                }\r\n            }\r\n        };\r\n        \r\n        let counter = 0;\r\n        for (let i=0; i<toMove.length; ++i){\r\n            //其他格子使命完成之后，让还在等待中可以游戏的格子准备回调，符合命令的格子继续游戏\r\n            move(toMove[i].x, toMove[i].y, ()=>{\r\n                counter++;\r\n                //合适结束.执行下面命令，即一排4x4的格子无法继续游戏时或等于游戏设定的长度时\r\n                if (counter == toMove.length){\r\n                    this.afterMove();\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    moveRight(){\r\n        \r\n    },\r\n\r\n    moveUp(){\r\n\r\n    },\r\n\r\n    moveDown(){\r\n\r\n    },\r\n\r\n});\r\n\r\n"]}